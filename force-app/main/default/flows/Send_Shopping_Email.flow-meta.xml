<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Send_Email</name>
        <label>Send Email</label>
        <locationX>176</locationX>
        <locationY>674</locationY>
        <actionName>DemoEmailUtility</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Status_Change</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>bccAddresses</name>
            <value>
                <elementReference>Additional_Email_Addresses</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>Body</name>
            <value>
                <elementReference>bodyTemplate.value</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>ccAddresses</name>
            <value>
                <elementReference>CCEmailAddress.value</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recordId</name>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>toAddresses</name>
            <value>
                <elementReference>ToEmailAddress.value</elementReference>
            </value>
        </inputParameters>
        <nameSegment>DemoEmailUtility</nameSegment>
        <offset>0</offset>
    </actionCalls>
    <apiVersion>63.0</apiVersion>
    <description>Update by Saurabh _ Added the StaticResourceURL - 7 March</description>
    <environments>Default</environments>
    <formulas>
        <name>CCAddresses</name>
        <dataType>String</dataType>
        <expression>{!Get_Email_Message_record_from_Case.CcAddress}</expression>
    </formulas>
    <formulas>
        <name>StaticResourceURL</name>
        <dataType>String</dataType>
        <expression>{!$Label.Encalm_Logo}</expression>
    </formulas>
    <interviewLabel>Lead Shopping Email {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Send Shopping Email</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordLookups>
        <name>Get_Email_Message_record_from_Case</name>
        <label>Get Email Message record from Case</label>
        <locationX>176</locationX>
        <locationY>242</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_EmailTemplates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Lead_Record_Details.Case__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailMessage</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_EmailTemplates</name>
        <label>Get EmailTemplates</label>
        <locationX>176</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Shopping_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Shopping Email on Lead Creation</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>EmailTemplate</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Lead_Record_Details</name>
        <label>Get Lead Record Details</label>
        <locationX>176</locationX>
        <locationY>134</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Email_Message_record_from_Case</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Lead</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Status_Change</name>
        <label>Status Change</label>
        <locationX>176</locationX>
        <locationY>782</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Open</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Awaiting Customer response</stringValue>
            </value>
        </inputAssignments>
        <object>Lead</object>
    </recordUpdates>
    <screens>
        <name>Send_Email_Preview</name>
        <label>Send Email Preview</label>
        <locationX>176</locationX>
        <locationY>566</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Send_Email</targetReference>
        </connector>
        <fields>
            <name>tempp</name>
            <fieldText>&lt;p&gt;{!bodyTemplate.value}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Send Email</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Send_Shopping_Email</name>
        <label>Send Shopping Email</label>
        <locationX>176</locationX>
        <locationY>458</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>Send_Email_Preview</targetReference>
        </connector>
        <fields>
            <name>ToEmailAddress</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>To Email Address</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>required</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>Get_Lead_Record_Details.Email</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>disabled</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>readonly</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>CCEmailAddress</name>
            <extensionName>flowruntime:email</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>CC Email Address</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>disabled</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>readonly</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>CCAddresses</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <validationRule>
                <errorMessage>&lt;p&gt;Invalid Formate&lt;/p&gt;</errorMessage>
                <formulaExpression>IF(
    NOT(ISBLANK({!CCEmailAddress.value})),
    REGEX({!CCEmailAddress.value},&quot;[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}&quot;),
    true
)</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>Additional_Emails</name>
            <dataType>Boolean</dataType>
            <fieldText>Additional Emails</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Additional_Email_Addresses</name>
            <dataType>String</dataType>
            <fieldText>Additional Email Addresses</fieldText>
            <fieldType>InputField</fieldType>
            <helpText>&lt;p&gt;Please enter additional email with comma separated values (ex johndee@gmail.com, larrythron@gmail.com)&lt;/p&gt;</helpText>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Invalid Formate&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>IF(
    NOT(ISBLANK({!Additional_Email_Addresses})),
    REGEX({!Additional_Email_Addresses},&quot;[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}&quot;),
    true
)</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Additional_Emails</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>Template_Preview</name>
            <defaultValue>
                <stringValue>{!ShoppingEmail}</stringValue>
            </defaultValue>
            <fieldText>Template Preview</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
            <visibilityRule>
                <conditionLogic>1</conditionLogic>
                <conditions>
                    <leftValueReference>htmltest</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>{$GlobalConstant.EmptyString}</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>bodyTemplate</name>
            <extensionName>c:inputRichTextFSC</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>ShoppingEmail</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <nextOrFinishButtonLabel>Email Preview</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Lead_Record_Details</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>htmltest</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&amp;lt;p&amp;gt;Hello &amp;lt;/p&amp;gt;&amp;lt;img src=&quot;https://your-image-url.com/image.jpg&quot; alt=&quot;Company Logo&quot; width=&quot;200&quot;/&amp;gt;&amp;lt;p&amp;gt;Best Regards,&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;Usfdfdsfdsfdfdsfdsfdsdsfds&amp;lt;/p&amp;gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>ShoppingEmail</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>&lt;p&gt;Dear {!Get_Lead_Record_Details.FirstName} &lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Get_Lead_Record_Details.LastName}&lt;/span&gt;,&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;Thank you for choosing Atithya Meet and Assist Services for your guest&apos;s forthcoming travel. &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;We kindly request you to share the required details and a copy of the flight ticket to enable us to proceed with the booking. Thank you, &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;Regards, &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;www.encalm.com &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;Neha Soni Deputy Manager - Reservations &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;M: +91 9582580773 E: neha.soni@encalm.com &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;Encalm Hospitality Pvt. Ltd. Tag Tower, &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;7th Floor, 17-18, Phase IV, Udyog Vihar, Sector 18, &lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0); font-size: medium; font-family: serif;&quot;&gt;Gurugram, Haryana 122015&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;{!StaticResourceURL}&quot; alt=&quot;Atithya Meet and Assist Logo&quot;&gt;&lt;/p&gt;</text>
    </textTemplates>
    <variables>
        <name>EmailTemplatesCollection</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>EmailTemplate</objectType>
    </variables>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
